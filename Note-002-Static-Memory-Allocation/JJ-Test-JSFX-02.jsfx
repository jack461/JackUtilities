desc:JJ-Test-JSFX-02

import JackUtilities/mSL_StM_Memory.jsfx-inc

@init

function malloc(size) ( mSL_StM_Alloc(size, 'data', 0); );
mSL_StM_Init(8);
mSL_StM_GlobFlgs = mSL_StM_FlSigErr;
chk1 = mSL_StM_Check(); // check the (empty) memory

add1 =  malloc(3);
add1z = mSL_StM_FreePt;
add2 =  malloc(0);
add2z = mSL_StM_FreePt;
add3 =  mSL_StM_Alloc(12, 'data', mSL_StM_FlFill);
add3z = mSL_StM_FreePt;
add4 =  mSL_StM_Alloc(47725, 'xyzt', mSL_StM_FlAlign);
add4z = mSL_StM_FreePt;

add5 =  mSL_StM_Alloc(32768, 'type', mSL_StM_FlAlign);
add5z = mSL_StM_FreePt;
chk2 = mSL_StM_Check();  // check all the blocks

chk3 = mSL_StM_Check(add5); // check a specific block


chk4 = mSL_StM_Check(add3z); // not a block => signal error 110 in the "block" at address 36

// Look at the contents of block 3
dat0 = add3[-2];
dat1 = add3[-1];
dat2 = add3[0];
dat3 = add3[1];
dat4 = add3[2];
dat5 = add3[3];
dat6 = add3[4];
dat7 = add3[5];
dat8 = add3[6];
dat9 = add3[7];
datA = add3[8];
datB = add3[9];
datC = add3[10];
datD = add3[11];
datE = add3[12];
datF = add3[13];
datG = add3[14];
datH = add3[15];


//
mSL_StM_Err = 0;
add6 = mSL_StM_Alloc(8000000, 'data', 0);
